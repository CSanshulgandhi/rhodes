require 'fileutils'

$curdir = pwd
TARGETDIR = ENV['TARGET_TEMP_DIR']
raise "TARGET_TEMP_DIR is not set" if TARGETDIR.nil?
OBJDIR = ENV['TEMP_FILES_DIR']
raise "TEMP_FILES_DIR is not set" if OBJDIR.nil?
$rootdir = ENV['RHO_ROOT']
raise "RHO_ROOT is not set" if $rootdir.nil?
$appincdir = ENV["RHO_INC"]
raise "RHO_INC is not set" if $appincdir.nil?

require File.join($rootdir, 'platform/android/build/androidcommon.rb')

ARGS = ["-I\"#{$curdir}/generated/jni\"",
    "-I\"#{$curdir}/../../shared\"",
    "-I\"#{$rootdir}/platform/android/Rhodes/jni/include\"",
    "-I\"#{$rootdir}/platform/android/Rhodes/jni/include/rhodes/details\"",
    "-I\"#{$rootdir}/platform/shared/ruby/include\"",
    "-I\"#{$rootdir}/platform/shared\"",
    "-I\"#{$rootdir}/platform/shared/common\"",
    "-I\"#{$rootdir}/platform/shared/api_generator\"",
    "-I\"#{$appincdir}\"",
    "-I\"#{File.join ENV['ANDROID_NDK'], "sources", "cxx-stl", "stlport", "stlport"}\"",
    "-I\"#{$rootdir}/platform/shared/ruby\"",
    "-I\"#{$rootdir}/platform/shared/ruby/android\"",
    "-I\"#{$rootdir}/platform/shared/ruby/generated\""]

SRC = get_sources File.join($curdir, 'ext_native.files')
OBJ = FileList.new(get_objects SRC, OBJDIR)

TARGETLIB = File.join(TARGETDIR, 'libcoreapi.a')

cd '../../..'

task :config do
    setup_ndk(ENV['ANDROID_NDK'],ENV['ANDROID_API_LEVEL'])
end

directory TARGETDIR
directory OBJDIR

rule '.o' => lambda {|obj| find_source(obj) } do |t|
    Rake::Task[:config].invoke
    cc_compile find_source(t.name), OBJDIR, ARGS
end

task OBJ => OBJDIR

def find_source(objfile)
  base = File.basename(objfile, '.o')
  src = SRC.find { |s| File.basename(s) == base }
  src
end

file TARGETLIB => TARGETDIR do |t|
    Rake::Task[:config].invoke
    cc_ar ('"'+t.name+'"'), OBJ.collect{|x| '"'+x+'"'}
end
multitask TARGETLIB => OBJ

task :default => TARGETLIB
